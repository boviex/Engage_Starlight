#pragma once

#include "il2cpp.h"

void UnityEngine_Rendering_Universal_UniversalRenderPipeline__add_customBeginFrameRendering (System_Action_ScriptableRenderContext__Camera____o* value, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__remove_customBeginFrameRendering (System_Action_ScriptableRenderContext__Camera____o* value, const MethodInfo* method);
float UnityEngine_Rendering_Universal_UniversalRenderPipeline__get_maxShadowBias (const MethodInfo* method);
float UnityEngine_Rendering_Universal_UniversalRenderPipeline__get_minRenderScale (const MethodInfo* method);
float UnityEngine_Rendering_Universal_UniversalRenderPipeline__get_maxRenderScale (const MethodInfo* method);
int32_t UnityEngine_Rendering_Universal_UniversalRenderPipeline__get_maxPerObjectLights (const MethodInfo* method);
int32_t UnityEngine_Rendering_Universal_UniversalRenderPipeline__get_maxVisibleAdditionalLights (const MethodInfo* method);
float UnityEngine_Rendering_Universal_UniversalRenderPipeline__get_overwriteShadowDistance (const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__set_overwriteShadowDistance (float value, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline___ctor (UnityEngine_Rendering_Universal_UniversalRenderPipeline_o* __this, UnityEngine_Rendering_Universal_UniversalRenderPipelineAsset_o* asset, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__Dispose (UnityEngine_Rendering_Universal_UniversalRenderPipeline_o* __this, bool disposing, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__Render (UnityEngine_Rendering_Universal_UniversalRenderPipeline_o* __this, UnityEngine_Rendering_ScriptableRenderContext_o renderContext, UnityEngine_Camera_array* cameras, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__RenderSingleCamera (UnityEngine_Rendering_ScriptableRenderContext_o context, UnityEngine_Camera_o* camera, const MethodInfo* method);
bool UnityEngine_Rendering_Universal_UniversalRenderPipeline__TryGetCullingParameters (UnityEngine_Rendering_Universal_CameraData_o cameraData, UnityEngine_Rendering_ScriptableCullingParameters_o* cullingParams, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__RenderSingleCamera (UnityEngine_Rendering_ScriptableRenderContext_o context, UnityEngine_Rendering_Universal_CameraData_o cameraData, bool anyPostProcessingEnabled, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__RenderCameraStack (UnityEngine_Rendering_ScriptableRenderContext_o context, UnityEngine_Camera_o* baseCamera, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__UpdateVolumeFramework (UnityEngine_Camera_o* camera, UnityEngine_Rendering_Universal_UniversalAdditionalCameraData_o* additionalCameraData, const MethodInfo* method);
bool UnityEngine_Rendering_Universal_UniversalRenderPipeline__CheckPostProcessForDepth (UnityEngine_Rendering_Universal_CameraData_o* cameraData, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__SetSupportedRenderingFeatures (const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__InitializeCameraData (UnityEngine_Camera_o* camera, UnityEngine_Rendering_Universal_UniversalAdditionalCameraData_o* additionalCameraData, bool resolveFinalTarget, UnityEngine_Rendering_Universal_CameraData_o* cameraData, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__InitializeStackedCameraData (UnityEngine_Camera_o* baseCamera, UnityEngine_Rendering_Universal_UniversalAdditionalCameraData_o* baseAdditionalCameraData, UnityEngine_Rendering_Universal_CameraData_o* cameraData, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__InitializeAdditionalCameraData (UnityEngine_Camera_o* camera, UnityEngine_Rendering_Universal_UniversalAdditionalCameraData_o* additionalCameraData, bool resolveFinalTarget, UnityEngine_Rendering_Universal_CameraData_o* cameraData, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__InitializeRenderingData (UnityEngine_Rendering_Universal_UniversalRenderPipelineAsset_o* settings, UnityEngine_Rendering_Universal_CameraData_o* cameraData, UnityEngine_Rendering_CullingResults_o* cullResults, bool anyPostProcessingEnabled, UnityEngine_Rendering_Universal_RenderingData_o* renderingData, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__InitializeShadowData (UnityEngine_Rendering_Universal_UniversalRenderPipelineAsset_o* settings, Unity_Collections_NativeArray_VisibleLight__o visibleLights, bool mainLightCastShadows, bool additionalLightsCastShadows, UnityEngine_Rendering_Universal_ShadowData_o* shadowData, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__InitializePostProcessingData (UnityEngine_Rendering_Universal_UniversalRenderPipelineAsset_o* settings, UnityEngine_Rendering_Universal_PostProcessingData_o* postProcessingData, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__InitializeLightData (UnityEngine_Rendering_Universal_UniversalRenderPipelineAsset_o* settings, Unity_Collections_NativeArray_VisibleLight__o visibleLights, int32_t mainLightIndex, int32_t subLightIndex, int32_t customShadowLightIndex, UnityEngine_Rendering_Universal_LightData_o* lightData, const MethodInfo* method);
int32_t UnityEngine_Rendering_Universal_UniversalRenderPipeline__GetPerObjectLightFlags (int32_t additionalLightsCount, const MethodInfo* method);
int32_t UnityEngine_Rendering_Universal_UniversalRenderPipeline__GetMainLightIndex (UnityEngine_Rendering_Universal_UniversalRenderPipelineAsset_o* settings, Unity_Collections_NativeArray_VisibleLight__o visibleLights, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__SetupPerFrameShaderConstants (const MethodInfo* method);
int32_t UnityEngine_Rendering_Universal_UniversalRenderPipeline__GetCustomMainLightIndex (UnityEngine_Rendering_Universal_UniversalRenderPipelineAsset_o* settings, Unity_Collections_NativeArray_VisibleLight__o visibleLights, System_String_o* subLightTag, int32_t customShadowLightIndex, const MethodInfo* method);
int32_t UnityEngine_Rendering_Universal_UniversalRenderPipeline__GetCustomSubLightIndex (Unity_Collections_NativeArray_VisibleLight__o visibleLights, System_String_o* subLightTag, const MethodInfo* method);
int32_t UnityEngine_Rendering_Universal_UniversalRenderPipeline__GetCustomShadowLightIndex (Unity_Collections_NativeArray_VisibleLight__o visibleLights, const MethodInfo* method);
bool UnityEngine_Rendering_Universal_UniversalRenderPipeline__IsGameCamera (UnityEngine_Camera_o* camera, const MethodInfo* method);
bool UnityEngine_Rendering_Universal_UniversalRenderPipeline__IsStereoEnabled (UnityEngine_Camera_o* camera, const MethodInfo* method);
UnityEngine_Rendering_Universal_UniversalRenderPipelineAsset_o* UnityEngine_Rendering_Universal_UniversalRenderPipeline__get_asset (const MethodInfo* method);
bool UnityEngine_Rendering_Universal_UniversalRenderPipeline__IsMultiPassStereoEnabled (UnityEngine_Camera_o* camera, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__SortCameras (UnityEngine_Rendering_Universal_UniversalRenderPipeline_o* __this, UnityEngine_Camera_array* cameras, const MethodInfo* method);
UnityEngine_RenderTextureDescriptor_o UnityEngine_Rendering_Universal_UniversalRenderPipeline__CreateRenderTextureDescriptor (UnityEngine_Camera_o* camera, float renderScale, bool isHdrEnabled, int32_t msaaSamples, bool needsAlpha, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__GetLightAttenuationAndSpotDirection (int32_t lightType, float lightRange, UnityEngine_Matrix4x4_o lightLocalToWorldMatrix, float spotAngle, System_Nullable_float__o innerSpotAngle, UnityEngine_Vector4_o* lightAttenuation, UnityEngine_Vector4_o* lightSpotDir, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__InitializeLightConstants_Common (Unity_Collections_NativeArray_VisibleLight__o lights, int32_t lightIndex, UnityEngine_Vector4_o* lightPos, UnityEngine_Vector4_o* lightColor, UnityEngine_Vector4_o* lightAttenuation, UnityEngine_Vector4_o* lightSpotDir, UnityEngine_Vector4_o* lightOcclusionProbeChannel, const MethodInfo* method);
bool UnityEngine_Rendering_Universal_UniversalRenderPipeline__get_gpuIsSaveMode (const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline__set_gpuIsSaveMode (bool value, const MethodInfo* method);
int32_t UnityEngine_Rendering_Universal_UniversalRenderPipeline__CalcResolutionOnGpuSaveMode (int32_t resolution, const MethodInfo* method);
int32_t UnityEngine_Rendering_Universal_UniversalRenderPipeline__CalcMainLightShadowmapResolution (UnityEngine_Rendering_Universal_UniversalRenderPipelineAsset_o* settings, const MethodInfo* method);
void UnityEngine_Rendering_Universal_UniversalRenderPipeline___cctor (const MethodInfo* method);
