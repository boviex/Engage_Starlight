#pragma once

#include "il2cpp.h"

int32_t UnityEngine_Cubemap__get_format (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
bool UnityEngine_Cubemap__Internal_CreateImpl (UnityEngine_Cubemap_o* mono, int32_t ext, int32_t mipCount, int32_t format, int32_t flags, intptr_t nativeTex, const MethodInfo* method);
void UnityEngine_Cubemap__Internal_Create (UnityEngine_Cubemap_o* mono, int32_t ext, int32_t mipCount, int32_t format, int32_t flags, intptr_t nativeTex, const MethodInfo* method);
void UnityEngine_Cubemap__ApplyImpl (UnityEngine_Cubemap_o* __this, bool updateMipmaps, bool makeNoLongerReadable, const MethodInfo* method);
void UnityEngine_Cubemap__UpdateExternalTexture (UnityEngine_Cubemap_o* __this, intptr_t nativeTexture, const MethodInfo* method);
bool UnityEngine_Cubemap__get_isReadable (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
void UnityEngine_Cubemap__SetPixelImpl (UnityEngine_Cubemap_o* __this, int32_t image, int32_t x, int32_t y, UnityEngine_Color_o color, const MethodInfo* method);
UnityEngine_Color_o UnityEngine_Cubemap__GetPixelImpl (UnityEngine_Cubemap_o* __this, int32_t image, int32_t x, int32_t y, const MethodInfo* method);
void UnityEngine_Cubemap__SmoothEdges (UnityEngine_Cubemap_o* __this, int32_t smoothRegionWidthInPixels, const MethodInfo* method);
void UnityEngine_Cubemap__SmoothEdges (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
UnityEngine_Color_array* UnityEngine_Cubemap__GetPixels (UnityEngine_Cubemap_o* __this, int32_t face, int32_t miplevel, const MethodInfo* method);
UnityEngine_Color_array* UnityEngine_Cubemap__GetPixels (UnityEngine_Cubemap_o* __this, int32_t face, const MethodInfo* method);
void UnityEngine_Cubemap__SetPixels (UnityEngine_Cubemap_o* __this, UnityEngine_Color_array* colors, int32_t face, int32_t miplevel, const MethodInfo* method);
bool UnityEngine_Cubemap__SetPixelDataImplArray (UnityEngine_Cubemap_o* __this, System_Array_o* data, int32_t mipLevel, int32_t face, int32_t elementSize, int32_t dataArraySize, int32_t sourceDataStartIndex, const MethodInfo* method);
bool UnityEngine_Cubemap__SetPixelDataImpl (UnityEngine_Cubemap_o* __this, intptr_t data, int32_t mipLevel, int32_t face, int32_t elementSize, int32_t dataArraySize, int32_t sourceDataStartIndex, const MethodInfo* method);
void UnityEngine_Cubemap__SetPixels (UnityEngine_Cubemap_o* __this, UnityEngine_Color_array* colors, int32_t face, const MethodInfo* method);
intptr_t UnityEngine_Cubemap__GetWritableImageData (UnityEngine_Cubemap_o* __this, int32_t frame, const MethodInfo* method);
bool UnityEngine_Cubemap__get_isPreProcessed (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
bool UnityEngine_Cubemap__get_streamingMipmaps (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
int32_t UnityEngine_Cubemap__get_streamingMipmapsPriority (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
int32_t UnityEngine_Cubemap__get_requestedMipmapLevel (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
void UnityEngine_Cubemap__set_requestedMipmapLevel (UnityEngine_Cubemap_o* __this, int32_t value, const MethodInfo* method);
bool UnityEngine_Cubemap__get_loadAllMips (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
void UnityEngine_Cubemap__set_loadAllMips (UnityEngine_Cubemap_o* __this, bool value, const MethodInfo* method);
int32_t UnityEngine_Cubemap__get_desiredMipmapLevel (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
int32_t UnityEngine_Cubemap__get_loadingMipmapLevel (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
int32_t UnityEngine_Cubemap__get_loadedMipmapLevel (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
void UnityEngine_Cubemap__ClearRequestedMipmapLevel (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
bool UnityEngine_Cubemap__IsRequestedMipmapLevelLoaded (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
void UnityEngine_Cubemap___ctor (UnityEngine_Cubemap_o* __this, int32_t width, int32_t format, int32_t flags, const MethodInfo* method);
void UnityEngine_Cubemap___ctor (UnityEngine_Cubemap_o* __this, int32_t width, int32_t format, int32_t flags, const MethodInfo* method);
void UnityEngine_Cubemap___ctor (UnityEngine_Cubemap_o* __this, int32_t width, int32_t format, int32_t mipCount, const MethodInfo* method);
void UnityEngine_Cubemap___ctor (UnityEngine_Cubemap_o* __this, int32_t width, int32_t format, int32_t flags, int32_t mipCount, const MethodInfo* method);
void UnityEngine_Cubemap___ctor (UnityEngine_Cubemap_o* __this, int32_t width, int32_t textureFormat, int32_t mipCount, intptr_t nativeTex, const MethodInfo* method);
void UnityEngine_Cubemap___ctor (UnityEngine_Cubemap_o* __this, int32_t width, int32_t textureFormat, bool mipChain, intptr_t nativeTex, const MethodInfo* method);
void UnityEngine_Cubemap___ctor (UnityEngine_Cubemap_o* __this, int32_t width, int32_t textureFormat, bool mipChain, const MethodInfo* method);
UnityEngine_Cubemap_o* UnityEngine_Cubemap__CreateExternalTexture (int32_t width, int32_t format, bool mipmap, intptr_t nativeTex, const MethodInfo* method);
void UnityEngine_Cubemap__SetPixelData_object_ (UnityEngine_Cubemap_o* __this, System_Object_array* data, int32_t mipLevel, int32_t face, int32_t sourceDataStartIndex, const MethodInfo_22C41E0* method);
void UnityEngine_Cubemap__SetPixel (UnityEngine_Cubemap_o* __this, int32_t face, int32_t x, int32_t y, UnityEngine_Color_o color, const MethodInfo* method);
UnityEngine_Color_o UnityEngine_Cubemap__GetPixel (UnityEngine_Cubemap_o* __this, int32_t face, int32_t x, int32_t y, const MethodInfo* method);
void UnityEngine_Cubemap__Apply (UnityEngine_Cubemap_o* __this, bool updateMipmaps, bool makeNoLongerReadable, const MethodInfo* method);
void UnityEngine_Cubemap__Apply (UnityEngine_Cubemap_o* __this, bool updateMipmaps, const MethodInfo* method);
void UnityEngine_Cubemap__Apply (UnityEngine_Cubemap_o* __this, const MethodInfo* method);
void UnityEngine_Cubemap__ValidateIsNotCrunched (int32_t flags, const MethodInfo* method);
void UnityEngine_Cubemap__SetPixelImpl_Injected (UnityEngine_Cubemap_o* __this, int32_t image, int32_t x, int32_t y, UnityEngine_Color_o* color, const MethodInfo* method);
void UnityEngine_Cubemap__GetPixelImpl_Injected (UnityEngine_Cubemap_o* __this, int32_t image, int32_t x, int32_t y, UnityEngine_Color_o* ret, const MethodInfo* method);
