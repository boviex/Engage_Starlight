#pragma once

#include "il2cpp.h"

void System_Threading_Thread__AsyncLocalSetCurrentCulture (System_Threading_AsyncLocalValueChangedArgs_CultureInfo__o args, const MethodInfo* method);
void System_Threading_Thread___ctor (System_Threading_Thread_o* __this, System_Threading_ThreadStart_o* start, const MethodInfo* method);
void System_Threading_Thread___ctor (System_Threading_Thread_o* __this, System_Threading_ParameterizedThreadStart_o* start, const MethodInfo* method);
void System_Threading_Thread__Start (System_Threading_Thread_o* __this, const MethodInfo* method);
void System_Threading_Thread__Start (System_Threading_Thread_o* __this, Il2CppObject* parameter, const MethodInfo* method);
void System_Threading_Thread__Start (System_Threading_Thread_o* __this, int32_t* stackMark, const MethodInfo* method);
System_Threading_ExecutionContext_Reader_o System_Threading_Thread__GetExecutionContextReader (System_Threading_Thread_o* __this, const MethodInfo* method);
bool System_Threading_Thread__get_ExecutionContextBelongsToCurrentScope (System_Threading_Thread_o* __this, const MethodInfo* method);
void System_Threading_Thread__set_ExecutionContextBelongsToCurrentScope (System_Threading_Thread_o* __this, bool value, const MethodInfo* method);
System_Threading_ExecutionContext_o* System_Threading_Thread__GetMutableExecutionContext (System_Threading_Thread_o* __this, const MethodInfo* method);
void System_Threading_Thread__SetExecutionContext (System_Threading_Thread_o* __this, System_Threading_ExecutionContext_o* value, bool belongsToCurrentScope, const MethodInfo* method);
void System_Threading_Thread__SetExecutionContext (System_Threading_Thread_o* __this, System_Threading_ExecutionContext_Reader_o value, bool belongsToCurrentScope, const MethodInfo* method);
void System_Threading_Thread__set_Priority (System_Threading_Thread_o* __this, int32_t value, const MethodInfo* method);
void System_Threading_Thread__SetPriorityNative (System_Threading_Thread_o* __this, int32_t priority, const MethodInfo* method);
bool System_Threading_Thread__JoinInternal (System_Threading_Thread_o* __this, int32_t millisecondsTimeout, const MethodInfo* method);
void System_Threading_Thread__Join (System_Threading_Thread_o* __this, const MethodInfo* method);
bool System_Threading_Thread__Join (System_Threading_Thread_o* __this, int32_t millisecondsTimeout, const MethodInfo* method);
void System_Threading_Thread__SleepInternal (int32_t millisecondsTimeout, const MethodInfo* method);
void System_Threading_Thread__Sleep (int32_t millisecondsTimeout, const MethodInfo* method);
void System_Threading_Thread__Sleep (System_TimeSpan_o timeout, const MethodInfo* method);
bool System_Threading_Thread__YieldInternal (const MethodInfo* method);
bool System_Threading_Thread__Yield (const MethodInfo* method);
void System_Threading_Thread__SetStartHelper (System_Threading_Thread_o* __this, System_Delegate_o* start, int32_t maxStackSize, const MethodInfo* method);
System_Globalization_CultureInfo_o* System_Threading_Thread__get_CurrentUICulture (System_Threading_Thread_o* __this, const MethodInfo* method);
System_Globalization_CultureInfo_o* System_Threading_Thread__GetCurrentUICultureNoAppX (System_Threading_Thread_o* __this, const MethodInfo* method);
System_Globalization_CultureInfo_o* System_Threading_Thread__get_CurrentCulture (System_Threading_Thread_o* __this, const MethodInfo* method);
void System_Threading_Thread__set_CurrentCulture (System_Threading_Thread_o* __this, System_Globalization_CultureInfo_o* value, const MethodInfo* method);
System_Globalization_CultureInfo_o* System_Threading_Thread__GetCurrentCultureNoAppX (System_Threading_Thread_o* __this, const MethodInfo* method);
void System_Threading_Thread__nativeInitCultureAccessors (const MethodInfo* method);
void System_Threading_Thread__MemoryBarrier (const MethodInfo* method);
void System_Threading_Thread__ConstructInternalThread (System_Threading_Thread_o* __this, const MethodInfo* method);
System_Threading_InternalThread_o* System_Threading_Thread__get_Internal (System_Threading_Thread_o* __this, const MethodInfo* method);
System_Runtime_Remoting_Contexts_Context_o* System_Threading_Thread__get_CurrentContext (const MethodInfo* method);
System_Threading_Thread_o* System_Threading_Thread__GetCurrentThread (const MethodInfo* method);
System_Threading_Thread_o* System_Threading_Thread__get_CurrentThread (const MethodInfo* method);
int32_t System_Threading_Thread__get_CurrentThreadId (const MethodInfo* method);
int32_t System_Threading_Thread__GetDomainID (const MethodInfo* method);
intptr_t System_Threading_Thread__Thread_internal (System_Threading_Thread_o* __this, System_MulticastDelegate_o* start, const MethodInfo* method);
void System_Threading_Thread__Finalize (System_Threading_Thread_o* __this, const MethodInfo* method);
bool System_Threading_Thread__get_IsThreadPoolThread (System_Threading_Thread_o* __this, const MethodInfo* method);
bool System_Threading_Thread__get_IsThreadPoolThreadInternal (System_Threading_Thread_o* __this, const MethodInfo* method);
bool System_Threading_Thread__get_IsAlive (System_Threading_Thread_o* __this, const MethodInfo* method);
void System_Threading_Thread__set_IsBackground (System_Threading_Thread_o* __this, bool value, const MethodInfo* method);
void System_Threading_Thread__SetName_internal (System_Threading_InternalThread_o* thread, System_String_o* name, const MethodInfo* method);
void System_Threading_Thread__set_Name (System_Threading_Thread_o* __this, System_String_o* value, const MethodInfo* method);
int32_t System_Threading_Thread__get_ThreadState (System_Threading_Thread_o* __this, const MethodInfo* method);
void System_Threading_Thread__SpinWait_nop (const MethodInfo* method);
void System_Threading_Thread__SpinWait (int32_t iterations, const MethodInfo* method);
void System_Threading_Thread__StartInternal (System_Threading_Thread_o* __this, System_Security_Principal_IPrincipal_o* principal, int32_t* stackMark, const MethodInfo* method);
void System_Threading_Thread__SetState (System_Threading_InternalThread_o* thread, int32_t set, const MethodInfo* method);
void System_Threading_Thread__ClrState (System_Threading_InternalThread_o* thread, int32_t clr, const MethodInfo* method);
int32_t System_Threading_Thread__GetState (System_Threading_InternalThread_o* thread, const MethodInfo* method);
int32_t System_Threading_Thread__SystemMaxStackStize (const MethodInfo* method);
int32_t System_Threading_Thread__GetProcessDefaultStackSize (int32_t maxStackSize, const MethodInfo* method);
void System_Threading_Thread__SetStart (System_Threading_Thread_o* __this, System_MulticastDelegate_o* start, int32_t maxStackSize, const MethodInfo* method);
int32_t System_Threading_Thread__get_ManagedThreadId (System_Threading_Thread_o* __this, const MethodInfo* method);
void System_Threading_Thread__BeginCriticalRegion (const MethodInfo* method);
void System_Threading_Thread__EndCriticalRegion (const MethodInfo* method);
int32_t System_Threading_Thread__GetHashCode (System_Threading_Thread_o* __this, const MethodInfo* method);
int32_t System_Threading_Thread__ValidateThreadState (System_Threading_Thread_o* __this, const MethodInfo* method);
